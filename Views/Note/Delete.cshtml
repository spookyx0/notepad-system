@model MyNotesApp.Models.NoteModel

@{
    ViewData["Title"] = "Delete Note";
}

<div class="relative flex flex-col items-center justify-start px-4 md:px-0 mt-12 animate-fade-in">
    <div class="text-center mb-8">
        <h1 class="text-4xl md:text-5xl font-extrabold text-red-600 tracking-tight animate-slide-down flex items-center justify-center space-x-2">
            <svg class="w-8 h-8 text-red-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.054 0 1.918-.816 1.994-1.85l.38-5.7A2 2 0 0019.3 9H4.7a2 2 0 00-1.992 1.75l.38 5.7A2 2 0 004.082 20zM9 9V7a3 3 0 116 0v2"></path>
            </svg>
            <span>Delete Note</span>
        </h1>
        <p class="text-gray-600 dark:text-gray-400 mt-2 text-lg animate-fade-in delay-300">Are you sure you want to delete this note? This action cannot be undone.</p>
    </div>

    <div class="bg-white dark:bg-gray-900 rounded-2xl shadow-2xl p-8 w-full max-w-3xl animate-fade-in delay-500">
        <h3 class="text-xl font-semibold text-gray-700 dark:text-gray-200 mb-4">Note Information</h3>
        <div class="divide-y divide-gray-300 dark:divide-gray-700 space-y-4">
            <div class="flex flex-col md:flex-row md:items-center justify-between py-2">
                <span class="font-medium text-gray-500 dark:text-gray-400">Title:</span>
                <span class="text-lg text-gray-800 dark:text-gray-100">@Html.DisplayFor(model => model.Title)</span>
            </div>
            <div class="flex flex-col md:flex-row md:items-center justify-between py-2">
                <span class="font-medium text-gray-500 dark:text-gray-400">Content:</span>
                <span class="text-lg text-gray-800 dark:text-gray-100">@Html.DisplayFor(model => model.Content)</span>
            </div>
            <div class="flex flex-col md:flex-row md:items-center justify-between py-2">
                <span class="font-medium text-gray-500 dark:text-gray-400">User Email:</span>
                <span class="text-lg text-gray-800 dark:text-gray-100">@Html.DisplayFor(model => model.User.Email)</span>
            </div>
        </div>

        <div class="mt-8 text-center">
            <button id="deleteButton" class="w-full md:w-auto px-6 py-3 bg-red-600 hover:bg-red-500 text-white font-bold rounded-lg shadow transition transform hover:scale-105 active:scale-95 cursor-pointer">
                Yes, Delete
            </button>

            <a asp-action="Index" class="w-full md:w-auto px-6 py-3 bg-gray-300 dark:bg-gray-700 text-gray-800 dark:text-gray-200 font-bold rounded-lg shadow hover:bg-gray-400 dark:hover:bg-gray-600 transition transform hover:scale-105 active:scale-95 text-center">
                Cancel
            </a>
        </div>
    </div>

    <div id="confirmationModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center opacity-0 pointer-events-none transition-all duration-300">
        <div class="bg-white dark:bg-gray-900 rounded-lg p-8 shadow-lg w-full max-w-md">
            <h3 class="text-2xl font-semibold text-gray-800 dark:text-gray-100 mb-4">Are you sure?</h3>
            <p class="text-gray-600 dark:text-gray-400 mb-4">This action will permanently delete the note and cannot be undone.</p>
            <div class="flex justify-between space-x-4">
                <button id="confirmDelete" class="px-6 py-3 bg-red-600 text-white font-semibold rounded-lg shadow hover:bg-red-500 transition transform hover:scale-105 active:scale-95">Delete</button>
                <button id="cancelDelete" class="px-6 py-3 bg-gray-300 dark:bg-gray-700 text-gray-800 dark:text-gray-200 font-semibold rounded-lg shadow hover:bg-gray-400 dark:hover:bg-gray-600 transition transform hover:scale-105 active:scale-95">Cancel</button>
            </div>
        </div>
    </div>
</div>

<form id="deleteForm" asp-action="Delete" method="post" class="hidden">
    <input type="hidden" asp-for="NoteId" />
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        const deleteButton = document.getElementById('deleteButton');
        const confirmationModal = document.getElementById('confirmationModal');
        const confirmDeleteButton = document.getElementById('confirmDelete');
        const cancelDeleteButton = document.getElementById('cancelDelete');
        const deleteForm = document.getElementById('deleteForm');
   
        deleteButton.addEventListener('click', function () {
            confirmationModal.classList.remove('opacity-0', 'pointer-events-none');
            confirmationModal.classList.add('opacity-100', 'pointer-events-auto');
        });

        confirmDeleteButton.addEventListener('click', function () {
            deleteForm.submit(); 
        });

        cancelDeleteButton.addEventListener('click', function () {
            confirmationModal.classList.remove('opacity-100', 'pointer-events-auto');
            confirmationModal.classList.add('opacity-0', 'pointer-events-none');
        });
    </script>
}

<style>
    @@keyframes fade-in { from { opacity: 0; } to { opacity: 1; } }
    @@keyframes slide-down { from { transform: translateY(-20px); opacity: 0; } to { transform: translateY(0); opacity: 1; } }

    .animate-fade-in { animation: fade-in 1s ease forwards; }
    .animate-slide-down { animation: slide-down 1s ease forwards; }

    #confirmationModal {
        transition: all 0.3s ease-in-out;
        z-index: 1000;
    }
</style>
